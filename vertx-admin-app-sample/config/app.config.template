#config for static app setup
name: "vertx-admin-app-sample"

syncDomains: false

#required when syncDomains: true
syncDomainsIntervalSeconds:  3600

#required when syncDomains: true
mergedJsonSchemaFileLocation: "merged.js"



verticles: [

  {
    name: "groovy:ai.vital.service.admin.vertx3.VitalServiceAdminVertx3"
    worker: true
    reloadable: false
  },
  
  {
    name: "groovy:ai.vital.adminauth.vertx3.VitalAdminAuthManager"
    worker: false
    reloadable: false
  },

  {
    name: "groovy:ai.vital.vertx.adminapp.sample.VertxAdminAppSampleVerticle"
    worker: false
    reloadable: true
  },
  
  {
    name: "groovy:ai.vital.vertx.adminapp.sample.VertxAdminAppHttpServerVerticle"
    worker: false
    reloadable: true
  }

]

vitalserviceadmin {

  profile: prime
  
  key: admi-admi-admi
  
}

vitalauth {

  apps: {
  
    apps-admin : {
    
      auth_enabled: true,
    
      access: admin
    
      adminLoginsSegment: apps-admin
      
      sessionsSegment: apps-admin
      
      persistentSessions: true
      
      maxSessionsPerUser: 3
      
      #1 day
      expirationProlongMargin: 86400000
      
      #1 year
      session_timeout: 31536000000


      filter: [
        {
          type: allow
          method: "getApp"
        },
        {
          type: allow
          method: callFunction
          function: "vitalauth\\..*"
        },
        {
          #access to query is restricted for logged in users only
          type: auth
          method: get
        },
        {
          #access to query is restricted for logged in users only
          type: auth
          method: query
        },
        {
          #everything else if forbidden in this app
          type: deny
          method: ".*"

        }
      ]
    }
    
  }

}


webserver {

  host: 0.0.0.0
  
  port: 90

}


app: vertx-app-sample
