#!/usr/bin/env groovy

import static groovy.io.FileType.FILES


def homeDir = new File(getClass().protectionDomain.codeSource.location.path).parentFile.parentFile.getAbsolutePath() + '/';


if (!System.getenv('VITAL_HOME') ) {
	System.err.println("No VITAL_HOME environment variable set!");
	return
}

if (!System.getenv('GROOVY_DIST') ) {
	System.err.println("No GROOVY_DIST environment variable set!");
	return
}


def vitalhome = System.getenv('VITAL_HOME')


String command = args.length > 0 ? args[0] : null

List jars = [homeDir + 'target/vital-samples-0.0.1-SNAPSHOT.jar']

def GROOVY_DIST = System.getenv('GROOVY_DIST')

jars.add(GROOVY_DIST + "embeddable/groovy-all-2.4.0.jar")


new File(vitalhome, "vitalsigns").eachFileRecurse(FILES) {
  if(it.name.endsWith(".jar")) {
    jars.add(it.absolutePath)
  }
}


new File(vitalhome, 'vital-domain').eachFile(FILES){
  if(it.name.endsWith(".jar")) {
      jars.add(it.absolutePath)
  }
}

new File(vitalhome, 'vital-lucene').eachFile(FILES){
  if(it.name.endsWith(".jar")) {
      jars.add(it.absolutePath)
  }
}

new File(vitalhome, "vitalservice").eachFileRecurse(FILES) {
  if(it.name.endsWith(".jar")) {
    jars.add(it.absolutePath)
  }
}



new File(vitalhome, "domain-groovy-jar").eachFile(FILES) {
  if(it.name.endsWith(".jar")) {
    jars.add(it.absolutePath)
  }
}




//new File(homeDir + 'lib').eachFileRecurse(FILES) {
//        if(it.name.endsWith('.jar')) {
//                jars.add(it.absolutePath)
//        }
//}

def mainClass = 'ai.vital.samples.SampleManagedOntology'

List cmd = ['java', '-cp', (String)jars.join(File.pathSeparator), mainClass]
for(String a : args) {
        cmd.add(a)
}

def process=new ProcessBuilder(cmd).redirectErrorStream(true).start()
process.inputStream.eachLine {println it}
